{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/gallery-api.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","input","handleInputChange","event","value","currentTarget","setState","handleOnSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImagGalleryItem","smallSize","alt","largeSize","onClick","src","data-large","data-alt","ImageGallery","images","map","item","ImageGalleryItem","webformatURL","tags","largeImageURL","id","fetchImages","searchQuery","currentPage","axios","get","then","response","data","hits","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","showModal","largeImage","onChangeInput","onOpenModal","dataset","large","onCloseModal","getImages","options","prevState","catch","error","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQA4CeA,E,4MAzCbC,MAAQ,CACNC,MAAO,I,EAGTC,kBAAoB,SAACC,GACnB,IAAMC,EAAQD,EAAME,cAAcD,MAClC,EAAKE,SAAS,CAAEL,MAAOG,K,EAGzBG,eAAiB,SAACJ,GAChBA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEL,MAAO,M,4CAGzB,WACE,OACE,wBAAQW,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUG,KAAKN,eAA5C,UACE,wBAAQO,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZb,MAAOS,KAAKb,MAAMC,MAClBiB,SAAUL,KAAKX,6B,GAnCHiB,aCUTC,EAZS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,QAA9B,OACtB,oBAAIZ,UAAU,mBAAd,SACE,qBACEa,IAAKJ,EACLC,IAAKA,EACLI,aAAYH,EACZI,WAAUL,EACVV,UAAU,yBACVY,QAASA,OCUAI,EAhBM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQL,EAAc,EAAdA,QAC9B,OACE,oBAAIZ,UAAU,eAAd,SACGiB,EAAOC,KAAI,SAACC,GAAD,OACV,cAACC,EAAD,CAEEX,UAAWU,EAAKE,aAChBX,IAAKS,EAAKG,KACVX,UAAWQ,EAAKI,cAChBX,QAASA,GAJJO,EAAKK,U,iBCILC,EARK,SAAC,GAA2C,IAAD,IAAxCC,mBAAwC,MAA1B,GAA0B,MAAtBC,mBAAsB,MAAR,EAAQ,EAC7D,OAAOC,IACJC,IADI,qCAE2BH,EAF3B,iBAE+CC,EAF/C,gBAHO,qCAGP,yDAIJG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,SCFvBC,EANA,SAAC,GAAD,IAAGtB,EAAH,EAAGA,QAAH,OACb,wBAAQV,KAAK,SAASF,UAAU,SAASY,QAASA,EAAlD,wB,iBCEIuB,EAAYC,SAASC,cAAc,eAEpBC,E,4MASnBC,cAAgB,SAAChD,GACI,WAAfA,EAAMiD,MACR,EAAK3C,MAAM4C,W,EAIfC,oBAAsB,SAACnD,GACjBA,EAAME,gBAAkBF,EAAMoD,QAChC,EAAK9C,MAAM4C,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAW5C,KAAKsC,iB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAW7C,KAAKsC,iB,oBAe7C,WACE,OAAOQ,uBACL,qBAAK/C,UAAU,UAAUY,QAASX,KAAKyC,oBAAvC,SACE,qBAAK1C,UAAU,QAAf,SAAwBC,KAAKJ,MAAMmD,aAErCb,O,GA1B6B5B,aC2FpB0C,G,kNAtFb7D,MAAQ,CACN6B,OAAQ,GACRS,YAAa,GACbwB,WAAW,EACXvB,YAAa,EACbwB,WAAW,EACXC,WAAY,GACZ1C,IAAK,I,EAeP2C,cAAgB,SAAChE,GACf,EAAKK,SAAS,CACZgC,YAAarC,EACbsC,YAAa,EACbV,OAAQ,M,EAIZqC,YAAc,SAAC/D,GACb,EAAKG,UAAS,SAACN,GAAD,MAAY,CACxB+D,WAAY/D,EAAM+D,UAClBC,WAAY7D,EAAMoD,OAAOY,QAAQC,MACjC9C,IAAKnB,EAAMoD,OAAOY,QAAQ7C,S,EAI9B+C,aAAe,WACb,EAAK/D,UAAS,SAACN,GAAD,MAAY,CACxB+D,WAAY/D,EAAM+D,e,EAItBO,UAAY,WACV,MAAqC,EAAKtE,MACpCuE,EAAU,CAAEjC,YADlB,EAAQA,YACuBC,YAD/B,EAAqBA,aAErB,EAAKjC,SAAS,CAAEwD,WAAW,IAC3BzB,EAAYkC,GACT7B,MAAK,SAACC,GACL,EAAKrC,UAAS,SAACkE,GAAD,MAAgB,CAC5B3C,OAAO,GAAD,mBAAM2C,EAAU3C,QAAhB,YAA2Bc,IACjCJ,YAAaiC,EAAUjC,YAAc,SAGxCkC,OAAM,SAACC,GAAD,gBAAcA,MACpBC,SAAQ,kBAAM,EAAKrE,SAAS,CAAEwD,WAAW,Q,wDA9C9C,SAAmBc,EAAWJ,GACxBA,EAAUlC,cAAgBzB,KAAKb,MAAMsC,aACvCzB,KAAKyD,YAEHzD,KAAKb,MAAMuC,YAAc,GAC3BiB,OAAOqB,SAAS,CACdC,IAAK9B,SAAS+B,gBAAgBC,aAC9BC,SAAU,a,oBA0ChB,WACE,OACE,gCACE,cAAC,EAAD,CAAWvE,SAAUG,KAAKoD,gBAC1B,cAAC,EAAD,CAAcpC,OAAQhB,KAAKb,MAAM6B,OAAQL,QAASX,KAAKqD,cACtDrD,KAAKb,MAAM8D,WACV,cAAC,IAAD,CACElD,UAAU,SACVE,KAAK,OACLoE,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGZxE,KAAKb,MAAMsC,cAAgBzB,KAAKb,MAAM8D,WACrC,cAAC,EAAD,CAAQtC,QAASX,KAAKyD,YAEvBzD,KAAKb,MAAM+D,WACV,cAAC,EAAD,CAAOV,QAASxC,KAAKwD,aAArB,SACE,qBAAK5C,IAAKZ,KAAKb,MAAMgE,WAAY1C,IAAKT,KAAKb,MAAMsB,e,GAhF3CH,cCLlBmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,W","file":"static/js/main.fe4d2032.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    input: \"\",\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const value = event.currentTarget.value;\r\n    this.setState({ input: value });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.input);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ input: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleOnSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.input}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n","const ImagGalleryItem = ({ smallSize, alt, largeSize, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={smallSize}\r\n      alt={alt}\r\n      data-large={largeSize}\r\n      data-alt={alt}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={onClick}\r\n    />\r\n  </li>\r\n);\r\nexport default ImagGalleryItem;\r\n","import ImageGalleryItem from \"../ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((item) => (\r\n        <ImageGalleryItem\r\n          key={item.id}\r\n          smallSize={item.webformatURL}\r\n          alt={item.tags}\r\n          largeSize={item.largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"20763996-832cb39490986f382e23fb6d5\";\r\n\r\nconst fetchImages = ({ searchQuery = \"\", currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","const Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport fetchImages from \"./services/gallery-api\";\nimport Button from \"./components/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: \"\",\n    isLoading: false,\n    currentPage: 1,\n    showModal: false,\n    largeImage: \"\",\n    alt: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.getImages();\n    }\n    if (this.state.currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  onChangeInput = (input) => {\n    this.setState({\n      searchQuery: input,\n      currentPage: 1,\n      images: [],\n    });\n  };\n\n  onOpenModal = (event) => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n      largeImage: event.target.dataset.large,\n      alt: event.target.dataset.alt,\n    }));\n  };\n\n  onCloseModal = () => {\n    this.setState((state) => ({\n      showModal: !state.showModal,\n    }));\n  };\n\n  getImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n    this.setState({ isLoading: true });\n    fetchImages(options)\n      .then((response) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...response],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch((error) => `${error}`)\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSubmit={this.onChangeInput} />\n        <ImageGallery images={this.state.images} onClick={this.onOpenModal} />\n        {this.state.isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        )}\n        {this.state.searchQuery && !this.state.isLoading && (\n          <Button onClick={this.getImages} />\n        )}\n        {this.state.showModal && (\n          <Modal onClose={this.onCloseModal}>\n            <img src={this.state.largeImage} alt={this.state.alt} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}